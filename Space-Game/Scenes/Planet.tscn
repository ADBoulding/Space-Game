[gd_scene load_steps=13 format=2]

[ext_resource path="res://Scenes/Planet_Gen/cloud_Shader.shader" type="Shader" id=1]
[ext_resource path="res://Scenes/Planet_Gen/Planet_Shader.shader" type="Shader" id=2]

[sub_resource type="SphereMesh" id=1]
resource_local_to_scene = true

[sub_resource type="OpenSimplexNoise" id=2]
seed = 20
octaves = 8
period = 145.0
persistence = 0.408
lacunarity = 2.81

[sub_resource type="NoiseTexture" id=3]
width = 400
height = 400
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/colour1 = Color( 0.33, 0.45, 0.53, 1 )
shader_param/colour2 = Color( 0.88, 0.91, 0.67, 1 )
shader_param/colour3 = Color( 0.58, 0.88, 0.51, 1 )
shader_param/colour1_Threshold = 0.384
shader_param/colour2_Threshold = 0.418
shader_param/colour3_Threshold = 0.6
shader_param/Base_Albedo = SubResource( 3 )

[sub_resource type="GDScript" id=5]
script/source = "extends MeshInstance

onready var collider : CollisionShape = $Area/CollisionShape
onready var clouds : MeshInstance = $Clouds

signal clickedOn

export var colour1 = Color(0.33,0.45,0.53,1)
export var colour2 = Color(0.88,0.91,0.67,1)
export var colour3 = Color(0.58,0.88,0.51,1)

export var c1t = 0.428
export var c2t = 0.516
export var c3t = 0.634

var planetData : Galaxy.Planet

var nSeed = 1
var octaves = 1
var period = 64.0
var persistence = 0.5
var lacunarity = 2.0

export(NoiseTexture) var Albedo = NoiseTexture.new()
var noise := OpenSimplexNoise.new()
var mat
var dir

func _load_planet():
	colour1 = planetData.colour1
	colour2 = planetData.colour2
	colour3 = planetData.colour3
	c1t = planetData.c1t
	c2t = planetData.c2t
	c3t = planetData.c3t
	
	noise.seed = planetData.nSeed
	noise.octaves = planetData.octaves
	noise.period = planetData.period
	noise.persistence = planetData.persistence
	noise.lacunarity = planetData.lacunarity
	collider.shape.radius = planetData.radius
	clouds.visible = planetData.hasAtmosphere
	dir = sqrt(planetData.rotation * planetData.rotation)/planetData.rotation
	_draw_planet()	
		
func _draw_planet():
	var image = noise.get_seamless_image(400)
	var image_texture = ImageTexture.new()
	image_texture.create_from_image(image)
	
	mat.set_shader_param(\"colour1\", colour1)
	mat.set_shader_param(\"colour2\", colour2)
	mat.set_shader_param(\"colour3\", colour3)
	mat.set_shader_param(\"colour1_Threshold\", c1t)
	mat.set_shader_param(\"colour2_Threshold\", c2t)
	mat.set_shader_param(\"colour3_Threshold\", c3t)
	
	mat.set_shader_param(\"Base_Albedo\",image_texture)

#Constructor for the script				
func setID(planet : Galaxy.Planet):
	planetData = planet
	
# Called when the node enters the scene tree for the first time.
func _ready()->void:
	mat = self.get_surface_material(0)
	_load_planet()

func _process(delta):
	rotate_y(delta * planetData.rotation/planetData.radius)
	clouds.rotate_y(delta * -planetData.rotation/planetData.radius/5)

func _on_Area_input_event(camera, event, click_position, click_normal, shape_idx):
	if event is InputEventMouseButton:
		if event.button_index == BUTTON_LEFT and event.pressed == true:
			emit_signal(\"clickedOn\")
"

[sub_resource type="SphereMesh" id=6]
resource_local_to_scene = true
radius = 1.02
height = 2.04

[sub_resource type="OpenSimplexNoise" id=7]
seed = 6
octaves = 9
period = 113.0
persistence = 0.825
lacunarity = 2.62

[sub_resource type="NoiseTexture" id=8]
width = 400
height = 400
seamless = true
noise = SubResource( 7 )

[sub_resource type="ShaderMaterial" id=9]
resource_local_to_scene = true
shader = ExtResource( 1 )
shader_param/colour1 = Color( 1, 1, 1, 0 )
shader_param/colour2 = Color( 1, 1, 1, 1 )
shader_param/cloudThreshold = 0.46
shader_param/Base_Albedo = SubResource( 8 )

[sub_resource type="SphereShape" id=10]
resource_local_to_scene = true
radius = 0.0

[node name="MeshInstance" type="MeshInstance" groups=[
"planetInstance",
]]
transform = Transform( 0.999999, 0, -0.00137881, 0, 1, 0, 0.00137881, 0, 0.999999, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 4 )
script = SubResource( 5 )
colour1 = Color( 0.00392157, 0.0235294, 0.0352941, 1 )

[node name="Clouds" type="MeshInstance" parent="."]
mesh = SubResource( 6 )
material/0 = SubResource( 9 )

[node name="Area" type="Area" parent="."]

[node name="CollisionShape" type="CollisionShape" parent="Area"]
shape = SubResource( 10 )
[connection signal="input_event" from="Area" to="." method="_on_Area_input_event"]
