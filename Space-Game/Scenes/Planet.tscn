[gd_scene load_steps=13 format=2]

[ext_resource path="res://Scenes/Planet_Gen/cloud_Shader.shader" type="Shader" id=1]
[ext_resource path="res://Scenes/Planet_Gen/Planet_Shader.shader" type="Shader" id=2]

[sub_resource type="SphereMesh" id=1]
resource_local_to_scene = true

[sub_resource type="OpenSimplexNoise" id=2]
octaves = 5
period = 180.0
persistence = 1.0
lacunarity = 4.0

[sub_resource type="NoiseTexture" id=3]
width = 400
height = 400
seamless = true
noise = SubResource( 2 )

[sub_resource type="ShaderMaterial" id=4]
resource_local_to_scene = true
shader = ExtResource( 2 )
shader_param/colour1 = Color( 0.33, 0.45, 0.53, 1 )
shader_param/colour2 = Color( 0.88, 0.91, 0.67, 1 )
shader_param/colour3 = Color( 0.58, 0.88, 0.51, 1 )
shader_param/colour1_Threshold = 0.45
shader_param/colour2_Threshold = 0.5
shader_param/colour3_Threshold = 0.55
shader_param/Base_Albedo = SubResource( 3 )

[sub_resource type="GDScript" id=5]
script/source = "extends MeshInstance

onready var collider : CollisionShape = $Area/CollisionShape
onready var clouds : MeshInstance = $Clouds

signal clickedOn

export var SystemID: Vector2
export var ID: int
export var LocalID: int

export var colour1 = Color(0.33,0.45,0.53,1)
export var colour2 = Color(0.88,0.91,0.67,1)
export var colour3 = Color(0.58,0.88,0.51,1)

export var c1t = 0.428
export var c2t = 0.516
export var c3t = 0.634

var planet: Global.SolarSystem.Planet

var nSeed = 1
var octaves = 1
var period = 64.0
var persistence = 0.5
var lacunarity = 2.0

var dir

export(NoiseTexture) var Albedo = NoiseTexture.new()

var noise := OpenSimplexNoise.new()

var mat

func _load_planet():
	var _x = str(SystemID.x)
	var _y = str(SystemID.y)
	if Global.systemDictionary[_x][_y].planets[LocalID] != null:
		print(\"everything is Kosher\")
		planet = Global.systemDictionary[_x][_y].planets[LocalID]
		
		colour1 = planet.colour1
		colour2 = planet.colour2
		colour3 = planet.colour3
		c1t = planet.c1t
		c2t = planet.c2t
		c3t = planet.c3t
		
		noise.seed = planet.nSeed
		noise.octaves = planet.octaves
		noise.period = planet.period
		noise.persistence = planet.persistence
		noise.lacunarity = planet.lacunarity
		collider.shape.radius = planet.radius
		clouds.visible = planet.hasAtmosphere
		dir = sqrt(planet.rotation * planet.rotation)/planet.rotation
		_draw_planet()
		
	else:
		print(\"Uh Oh\")
		
		
func _draw_planet():
	var image = noise.get_seamless_image(400)
	var image_texture = ImageTexture.new()
	image_texture.create_from_image(image)
	
	mat.set_shader_param(\"colour1\", colour1)
	mat.set_shader_param(\"colour2\", colour2)
	mat.set_shader_param(\"colour3\", colour3)
	mat.set_shader_param(\"colour1_Threshold\", c1t)
	mat.set_shader_param(\"colour2_Threshold\", c2t)
	mat.set_shader_param(\"colour3_Threshold\", c3t)
	
	mat.set_shader_param(\"Base_Albedo\",image_texture)

#Constructor for the script				
func setID(_sysID, _locID, _ID):
	SystemID = _sysID
	LocalID = _locID
	ID = _ID
	
# Called when the node enters the scene tree for the first time.
func _ready()->void:
	mat = self.get_surface_material(0)
	_load_planet()

func _process(delta):
	rotate_y(delta * planet.rotation/planet.radius)
	clouds.rotate_y(delta * -planet.rotation/planet.radius/5)

func _on_Area_input_event(camera, event, click_position, click_normal, shape_idx):
	if event is InputEventMouseButton:
		if event.button_index == BUTTON_LEFT and event.pressed == true:
			emit_signal(\"clickedOn\")
"

[sub_resource type="SphereMesh" id=7]
resource_local_to_scene = true
radius = 1.02
height = 2.04

[sub_resource type="OpenSimplexNoise" id=9]
seed = 6
octaves = 9
period = 113.0
persistence = 0.825
lacunarity = 2.62

[sub_resource type="NoiseTexture" id=10]
width = 400
height = 400
seamless = true
noise = SubResource( 9 )

[sub_resource type="ShaderMaterial" id=8]
resource_local_to_scene = true
shader = ExtResource( 1 )
shader_param/colour1 = Color( 1, 1, 1, 0 )
shader_param/colour2 = Color( 1, 1, 1, 1 )
shader_param/cloudThreshold = 0.46
shader_param/Base_Albedo = SubResource( 10 )

[sub_resource type="SphereShape" id=6]
radius = 0.0

[node name="MeshInstance" type="MeshInstance" groups=[
"planetInstance",
]]
transform = Transform( 0.999999, 0, -0.00137881, 0, 1, 0, 0.00137881, 0, 0.999999, 0, 0, 0 )
mesh = SubResource( 1 )
material/0 = SubResource( 4 )
script = SubResource( 5 )
colour1 = Color( 0.00392157, 0.0235294, 0.0352941, 1 )

[node name="Clouds" type="MeshInstance" parent="."]
mesh = SubResource( 7 )
material/0 = SubResource( 8 )

[node name="Area" type="Area" parent="."]

[node name="CollisionShape" type="CollisionShape" parent="Area"]
shape = SubResource( 6 )
[connection signal="input_event" from="Area" to="." method="_on_Area_input_event"]
